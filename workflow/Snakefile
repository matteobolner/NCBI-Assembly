include: "rules/common.smk"
include: "rules/download_and_prepare_assemblies.smk"
include: "rules/prepare_dbs_and_indexes.smk"
include: "rules/genome_alignment.smk"


# include: "rules/igf2_pangene.smk"


rule all:
    input:
        expand(
            "GENOMES/{species}/{assembly_name}/ncbi/{assembly_accession}_{assembly_name}_genomic.fna.0123",
            species="Bos_taurus",
            assembly_name="ARS-UCD2.0",
            assembly_accession="GCF_002263795.3",
        ),
        #"GENOMES/Bos_taurus/ARS-UCD2.0/ncbi/GCF_002263795.3/GCF_002263795.3_ARS-UCD2.0_genomic.fna.bwt.2bit.64",


# expand("GENOMES/{species}/{assembly_name}/blastdb/{assembly_accession}_{assembly_name}_genomic.ndb",
# zip,
# species=genomes['Species'],
# assembly_name=genomes['Assembly Name'],
# assembly_accession=genomes['Assembly Accession']
# )

# expand("GENOMES/{species}/{assembly_name}/lastdb_near/{assembly_accession}_{assembly_name}_genomic_masked_mtgenome.prj",
# zip,
# species=genomes[~genomes['Species'].isin(['Bos_taurus','Capra_hircus'])]['Species'],
# assembly_name=genomes[~genomes['Species'].isin(['Bos_taurus','Capra_hircus'])]['Assembly Name'],
# assembly_accession=genomes[~genomes['Species'].isin(['Bos_taurus','Capra_hircus'])]['Assembly Accession'],
# )
# "ANALYSES/lastal/joined_aligmments/Sus_scrofa/Sscrofa11.1/GCF_000003025.6_vs_all_suidae.maf"
# expand("GENOMES/{species}/{assembly_name}/lastdb_basic/{assembly_accession}_{assembly_name}_genomic_masked_mtgenome.prj",
# zip,
# species=genomes['Species'],
# assembly_name=genomes['Assembly Name'],
# assembly_accession=genomes['Assembly Accession']
# )
# expand("ANALYSES/minigraph/genome_paths/Sus_scrofa/{other_assembly_name}/{other_assembly_accession}_{other_assembly_name}.gfa",
# zip,
# other_assembly_accession=genomes[genomes['Species']=='Sus_scrofa']['Assembly Accession'],
# other_assembly_name=genomes[genomes['Species']=='Sus_scrofa']['Assembly Name'])

# expand(expand(
#    "ANALYSES/minimap2/interspecies_alignment/{main_species}/{main_assembly_name}/{{other_species}}/{{other_assembly_name}}/{{other_assembly_accession}}_vs_{main_assembly_accession}.var.txt",
#    zip,
#    main_species='Sus_scrofa',
#    main_assembly_name='Sscrofa11.1',
#    main_assembly_accession='GCF_000003025.6'),
#    zip,
#    other_species=genomes[genomes['Species'].isin(['Phacochoerus_africanus','Sus_cebifrons'])]['Species'],
#    other_assembly_name=genomes[genomes['Species'].isin(['Phacochoerus_africanus','Sus_cebifrons'])]['Assembly Name'],
#    other_assembly_accession=genomes[genomes['Species'].isin(['Phacochoerus_africanus','Sus_cebifrons'])]['Assembly Accession'].tolist())
# expand(
#    "ANALYSES/minimap2/{main_species}/{main_assembly_name}/{other_species}/{other_assembly_name}/{other_assembly_accession}_vs_{main_assembly_accession}.var.txt",
#    zip,
#    main_species='Sus_scrofa',
#    main_assembly_name="Sscrofa11.1",
#    main_assembly_accession="GCF_000003025.6",
#    other_species="Sus_sc/rofa",
#    other_assembly_name="Berkshire_pig_v1",
#    other_assembly_accession="GCA_001700575.1")
# "ANALYSES/minigraph/sus_scrofa_graph.gfa"
# expand("ANALYSES/mumandco/Sus_scrofa/{other_assembly_name}/{other_assembly_accession}/",
#            zip,
#            other_assembly_name=genomes[(genomes['Species']=='Sus_scrofa')&(genomes['Assembly Name']!='Sscrofa11.1')]['Assembly Name'],
#            other_assembly_accession=genomes[(genomes['Species']=='Sus_scrofa')&(genomes['Assembly Name']!='Sscrofa11.1')]['Assembly Accession'],
#        )
# "STATS/genome_alignment/tables/genomes_aligned_to_Sscrofa11.1_stats.tsv"
# expand(
#    "GENOMES/{species}/{assembly_name}/ncbi/{assembly_accession}_{assembly_name}_genomic_masked_mtgenome.fna.gz",
#    zip,
#    species="Sus_cebifrons",
#    assembly_accession="GCA_905335845.1",
#    assembly_name="Sus_cebifrons.v1",)
# find a way to combine 3 wc vs 3 wc instead of 6 vs self
# expand("GENOMES/{main_species}/{main_assembly_name}/last_train/{other_species}/{other_assembly_name}/{main_assembly_accession}_{other_assembly_accession}.train",
#    zip,
#    main_species=genomes['Species'],
#    main_assembly_name=genomes['Assembly Name'],
#    main_assembly_accession=genomes['Assembly Accession'],),
#    other_species=genomes['Species'],
#    other_assembly_name=genomes['Assembly Name'],
#    other_assembly_accession=genomes['Assembly Accession'],),
# expand(
#    "GENOMES/{species}/{ref_assembly_name}/lastdb_distant_orthology/{ref_assembly_accession}_{ref_assembly_name}_genomic.prj",
#    zip,
#    species="Sus_scrofa",
#    ref_assembly_name="Sscrofa11.1",
#    ref_assembly_accession="GCF_000003025.6",
# ),
# expand(
#    "GENOMES/Sus_scrofa/Sscrofa11.1/last_split/{other_species}/{other_assembly_name}/GCF_000003025.6_{other_assembly_accession}.csv",
#    zip,
#    other_species=genomes["Species"],
#    other_assembly_name=genomes["Assembly Name"],
#    other_assembly_accession=genomes["Assembly Accession"],
# ),
# expand(
#    "GENOMES/{species}/{assembly_name}/lastdb/{assembly_accession}_{assembly_name}_genomic.prj",
#    zip,
#    species=genomes["Species"],
#    assembly_accession=genomes["Assembly Accession"],
#    assembly_name=genomes["Assembly Name"],
# ),
# expand("GENOMES/Sus_scrofa/{assembly_name}/lastdb/{assembly_accession}_{assembly_name}_genomic.prj", assembly_name=config["ref_genomes"]["Sus_scrofa"]["assembly_name"],assembly_accession=config["ref_genomes"]["Sus_scrofa"]['assembly_accession'])
# expand("GENOMES/{species}/{assembly_name}/blastdb/{assembly_accession}_{assembly_name}_genomic.ndb", zip, species='test',assembly_accession='test', assembly_name='test'),
# expand("GENOMES/{species}/{assembly_name}/lastdb/{assembly_accession}_{assembly_name}_genomic.des", zip, species=genomes['Species'],assembly_accession=genomes['Assembly Accession'], assembly_name=genomes['Assembly Name']),
# expand("GENOMES/{species}/{assembly_name}/blastdb/{assembly_accession}_{assembly_name}_genomic.ndb", zip, species=genomes['Species'],assembly_accession=genomes['Assembly Accession'], assembly_name=genomes['Assembly Name'])
# expand("/lustre/home/bolner/data/genomes/{species}/{assembly_name}/blastdb/{assembly_accession}_{assembly_name}_genomic.fna.ndb", zip, species='test',assembly_accession='test', assembly_name='test'),
# "/lustre/home/bolner/data/genomes/test/test/lastdb/test_test_genomic.fna.des"
# "/lustre/home/bolner/data/genomes/Sus_scrofa/Sscrofa10.2/lastdb/GCF_000003025.5_Sscrofa10.2_genomic.fna.bck",
# "/lustre/home/bolner/data/genomes/Sus_scrofa/Sscrofa10.2/blastdb/GCF_000003025.5_Sscrofa10.2_genomic.fna.ndb"
